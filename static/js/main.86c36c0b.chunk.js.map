{"version":3,"sources":["screen/Exam4training.tsx","screen/Examtopics.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Exam4training","useState","error","setError","isLoaded","setIsLoaded","items","setItems","useEffect","fetch","then","res","json","result","className","href","map","item","index","url","name","replaceAll","dangerouslySetInnerHTML","__html","answer","Examtopics","id","useParams","Array","x","i","Fragment","to","Number","queanshtml","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86c36c0b.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport interface ItemsObject {\r\n    name: string;\r\n    url: string;\r\n    ques: string;\r\n    answer: string[];\r\n}\r\n\r\nfunction Exam4training() {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"/AWS-MCQ/exam4trainingListQueAns.json\")\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(true);\r\n                    setItems(result);\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n            );\r\n    }, []);\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n    } else {\r\n        return (\r\n            <div className=\"App\">\r\n                <h5>\r\n                    <a href={'https://www.exam4training.com/amazon/exam-aws-solution-architect-associate-aws-certified-solutions-architect-associate/'}>  Exam4training </a>\r\n                </h5>\r\n                <hr />\r\n                {items.map((item: ItemsObject, index: number) => (\r\n                    <div key={index}>\r\n                        <a href={item.url}>\r\n                            <h4>\r\n                                {index + 1}. {item.name.replaceAll(\"Ã‚\", \"\")}\r\n                            </h4>\r\n                        </a>\r\n                        <div dangerouslySetInnerHTML={{ __html: item.answer[0] }} />\r\n                        <br />\r\n                        <div dangerouslySetInnerHTML={{ __html: item.answer[2] }} />\r\n                        <hr />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Exam4training;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nexport interface ItemsObject {\r\n    name: string;\r\n    url: string;\r\n    reply: string;\r\n    views: string;\r\n    username: string;\r\n    posttime: string;\r\n    queanshtml: string;\r\n    que: string[];\r\n    que_header: string;\r\n    ans: string;\r\n    ans_details: string;\r\n}\r\n\r\ninterface ParamTypes {\r\n    id: string\r\n}\r\n\r\nfunction Examtopics() {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n    const { id } = useParams<ParamTypes>();\r\n\r\n    useEffect(() => {\r\n        fetch(\"/AWS-MCQ/examtopics-\" + id + \".json\")\r\n            .then((res) => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(true);\r\n                    setItems(result);\r\n                },\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n            );\r\n    }, [id]);\r\n\r\n    if (error) {\r\n        return <div>Error: {error}</div>;\r\n    } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n    } else {\r\n        return (\r\n            <div className=\"App\">\r\n                <h5>\r\n                    <a href={'https://www.examtopics.com/discussions/amazon/'}>  Examtopics </a>\r\n                </h5>\r\n                <hr />\r\n                {[...Array(19)].map((x, i) =>\r\n                    <React.Fragment key={i}>\r\n                        <Link to={\"/AWS-MCQ/examtopics/\" + (i + 1)}>{i + 1}</Link> &nbsp;\r\n                    </React.Fragment>\r\n                )}\r\n                <hr />\r\n                {items.map((item: ItemsObject, index: number) => (\r\n                    <div key={index}>\r\n                        <a href={'https://www.examtopics.com' + item.url}>\r\n                            <h4>\r\n                                {((Number(id) - 1) * 300) + index + 1}. {item.name}\r\n                            </h4>\r\n                        </a>\r\n                        <div dangerouslySetInnerHTML={{ __html: item.queanshtml.replaceAll(\"\\n<a class=\\\"btn btn-primary reveal-solution\\\" href=\\\"#\\\">Show Suggested Answer</a>\\n<a class=\\\"btn btn-primary hide-solution d-none\\\" href=\\\"#\\\">Hide Answer</a>\\n<p class=\\\"card-text question-answer bg-light white-text\\\">\", '') }} />\r\n                        <hr />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Examtopics;\r\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport \"./App.css\";\n\nimport Exam4training from \"./screen/Exam4training\";\nimport Examtopics from \"./screen/Examtopics\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <div>\n          <nav className=\"navbar navbar-default\">\n            <div className=\"container-fluid\">\n              <div className=\"navbar-header\">\n                <Link className=\"navbar-brand\" to=\"/\" >AWS Question and Ansewers</Link>\n              </div>\n              <ul className=\"nav navbar-nav\">\n                <li><Link to=\"/AWS-MCQ/exam4training\">Exam4training</Link></li>\n                <li><Link to=\"/AWS-MCQ/examtopics/1\">Examtopics</Link></li>\n              </ul>\n            </div>\n          </nav>\n\n          <Switch>\n            <Route path=\"/AWS-MCQ/exam4training\">\n              <Exam4training />\n            </Route>\n            <Route path=\"/AWS-MCQ/examtopics/:id\">\n              <Examtopics />\n            </Route>\n            <Route path=\"/\">\n              <p>AWS Question and Ansewer</p>\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}